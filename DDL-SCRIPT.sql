CREATE SCHEMA online_food_delivery_system;

SET SEARCH_PATH TO online_food_delivery_system;

CREATE TABLE Users(
	UserID CHARACTER(20) PRIMARY KEY,
	Username VARCHAR(50) NOT NULL,
	"Password" VARCHAR(50) NOT NULL,
	Email VARCHAR(50) NOT NULL,
	phone_no CHARACTER(10) NOT NULL,
	IS_premium_User CHARACTER(1) NOT NULL,
	User_address VARCHAR(100) NOT NULL,
	User_City VARCHAR(20) NOT NULL
);

CREATE TABLE Restaurant(
	RestaurantID CHARACTER(20) PRIMARY KEY,
	Restaurantname VARCHAR(50) NOT NULL,
	contact_no CHARACTER(10) NOT NULL,
	Restaurant_address VARCHAR(100) NOT NULL,
	Restaurant_City VARCHAR(20) NOT NULL
);

CREATE TABLE Category(
	CategoryID CHARACTER(20) PRIMARY KEY,
	Categoryname VARCHAR(50) NOT NULL
);

CREATE TABLE Items(
	ItemID CHARACTER(20) PRIMARY KEY,
	Itemname VARCHAR(50) NOT NULL,
	Price INT NOT NULL,
	Preparation_time INT NOT NULL,
	CategoryID CHARACTER(10) NOT NULL,
	RestaurantID CHARACTER(10) NOT NULL,
	FOREIGN KEY(CategoryID) REFERENCES Category ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(RestaurantID) REFERENCES Restaurant ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Delievery_Guy(
	Delievery_partner_ID CHARACTER(20) PRIMARY KEY,
	DPname VARCHAR(50) NOT NULL,
	"Location" VARCHAR(50) NOT NULL,
	PhoneNumber DECIMAL(10) NOT NULL,
	VehicleNumber VARCHAR(15) NOT NULL
);

CREATE TABLE Payment(
	PaymentID CHARACTER(10) PRIMARY KEY,
	Amount DECIMAL(10, 2) NOT NULL,
	Payment_method VARCHAR(20) NOT NULL
);

CREATE TABLE Orders(
	OrderID CHARACTER(10) PRIMARY KEY,
	Order_status VARCHAR(20) NOT NULL,
	"DATE" DATE NOT NULL,
	Delievery_address VARCHAR(100) NOT NULL,
	UserID CHARACTER(10) NOT NULL,
	PaymentID CHARACTER(10) NOT NULL,
	Delievery_partner_ID CHARACTER(10) NOT NULL,
	FOREIGN KEY(UserID) REFERENCES Users ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(PaymentID) REFERENCES Payment ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(Delievery_partner_ID) REFERENCES Delievery_Guy ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Ordered_item(
	OrderID CHARACTER(10) NOT NULL,
	ItemID CHARACTER(10) NOT NULL,
	Quantity SMALLINT NOT NULL,
	PRIMARY KEY (OrderID, ItemID),
	FOREIGN KEY(OrderID) REFERENCES orders ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(ItemID) REFERENCES Items ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Item_Ratings(
	UserID CHARACTER(10) NOT NULL,
	ItemID CHARACTER(10) NOT NULL,
	Ratings SMALLINT NOT NULL,
	PRIMARY KEY (UserID, ItemID),
	FOREIGN KEY(UserID) REFERENCES Users ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(ItemID) REFERENCES Items ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Restaurant_Ratings(
	RestaurantID CHARACTER(10) NOT NULL,
	UserID CHARACTER(10) NOT NULL,
	Ratings SMALLINT NOT NULL,
	PRIMARY KEY (RestaurantID, UserID),
	FOREIGN KEY(RestaurantID) REFERENCES Restaurant ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(UserID) REFERENCES Users ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Offer(
	OfferID CHARACTER(10) PRIMARY KEY,
	offername VARCHAR(50) NOT NULL
);

CREATE TABLE Have_offer(
	RestaurantID CHARACTER(10) NOT NULL,
	OfferID CHARACTER(10) NOT NULL,
	PRIMARY KEY (RestaurantID, OfferID),
	FOREIGN KEY(RestaurantID) REFERENCES Restaurant ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY(OfferID) REFERENCES Offer ON DELETE CASCADE ON UPDATE CASCADE
);